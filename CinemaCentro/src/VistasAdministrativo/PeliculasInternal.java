package VistasAdministrativo;

import Controlador.PeliculaDAO;
import Modelo.Pelicula;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class PeliculasInternal extends javax.swing.JInternalFrame {

    /**
     * Creates new form PeliculasInternal
     */
    String[] cabeceras = {"ID", "Titulo", "Director", "En Cartelera", "Estreno", "Estado"};
    private PeliculaDAO peliculaDAO = new PeliculaDAO();

    public PeliculasInternal() {
        initComponents();
        tblPeliculas.setModel(VentanaAdministrativo.armarCabeceras(cabeceras));
        cargarTablaPeliculas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngEstado = new javax.swing.ButtonGroup();
        btngCartelera = new javax.swing.ButtonGroup();
        btngVerTodo = new javax.swing.ButtonGroup();
        pnlPeliculas = new javax.swing.JPanel();
        lblTituloPanel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPeliculas = new javax.swing.JTable();
        pnlPeliculaS = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReparto = new javax.swing.JTextArea();
        lblTitulo = new javax.swing.JLabel();
        lblDirector = new javax.swing.JLabel();
        lblReparto = new javax.swing.JLabel();
        txtDirector = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        lblPaisOrigen = new javax.swing.JLabel();
        lblCartelera = new javax.swing.JLabel();
        lblGeneros = new javax.swing.JLabel();
        lblEstreno = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        txtPaisOrigen = new javax.swing.JTextField();
        txtGeneros = new javax.swing.JTextField();
        lblEstadoS = new javax.swing.JLabel();
        cmbEnCartelera = new javax.swing.JComboBox<>();
        txtEstreno = new javax.swing.JTextField();
        pnlControles = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnAlta = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        pnlFiltros = new javax.swing.JPanel();
        lblFiltroEstado = new javax.swing.JLabel();
        lblFiltroCartelera = new javax.swing.JLabel();
        rbtnEstadoActivo = new javax.swing.JRadioButton();
        rbtnEstadoInactivo = new javax.swing.JRadioButton();
        rbtnCarteleraSi = new javax.swing.JRadioButton();
        rbtnCarteleraNo = new javax.swing.JRadioButton();
        rbtnEstadoTodas = new javax.swing.JRadioButton();
        rbtnTodasCartelera = new javax.swing.JRadioButton();
        rbtnVerTodo = new javax.swing.JRadioButton();
        btnSalir = new javax.swing.JButton();
        lblCinemaCentro = new javax.swing.JLabel();

        pnlPeliculas.setBackground(new java.awt.Color(102, 0, 0));

        lblTituloPanel.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        lblTituloPanel.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloPanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloPanel.setText("REGISTRAR PELICULAS");

        tblPeliculas.setBackground(new java.awt.Color(102, 0, 0));
        tblPeliculas.setForeground(new java.awt.Color(255, 255, 255));
        tblPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblPeliculas.setGridColor(new java.awt.Color(255, 255, 255));
        tblPeliculas.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblPeliculas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPeliculasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPeliculas);

        pnlPeliculaS.setBackground(new java.awt.Color(102, 0, 0));

        txtReparto.setBackground(new java.awt.Color(102, 0, 0));
        txtReparto.setColumns(20);
        txtReparto.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        txtReparto.setForeground(new java.awt.Color(255, 255, 255));
        txtReparto.setRows(5);
        txtReparto.setAutoscrolls(false);
        jScrollPane2.setViewportView(txtReparto);

        lblTitulo.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Titulo:");

        lblDirector.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblDirector.setForeground(new java.awt.Color(255, 255, 255));
        lblDirector.setText("Director:");

        lblReparto.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblReparto.setForeground(new java.awt.Color(255, 255, 255));
        lblReparto.setText("Reparto:");

        txtDirector.setBackground(new java.awt.Color(102, 0, 0));
        txtDirector.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        txtDirector.setForeground(new java.awt.Color(255, 255, 255));
        txtDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDirectorActionPerformed(evt);
            }
        });

        txtTitulo.setBackground(new java.awt.Color(102, 0, 0));
        txtTitulo.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(255, 255, 255));

        lblPaisOrigen.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblPaisOrigen.setForeground(new java.awt.Color(255, 255, 255));
        lblPaisOrigen.setText("P. de origen:");

        lblCartelera.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblCartelera.setForeground(new java.awt.Color(255, 255, 255));
        lblCartelera.setText("En cartelera:");

        lblGeneros.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblGeneros.setForeground(new java.awt.Color(255, 255, 255));
        lblGeneros.setText("Genero:");

        lblEstreno.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblEstreno.setForeground(new java.awt.Color(255, 255, 255));
        lblEstreno.setText("Estreno:");

        lblEstado.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblEstado.setForeground(new java.awt.Color(255, 255, 255));
        lblEstado.setText("Estado:");

        txtPaisOrigen.setBackground(new java.awt.Color(102, 0, 0));
        txtPaisOrigen.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        txtPaisOrigen.setForeground(new java.awt.Color(255, 255, 255));

        txtGeneros.setBackground(new java.awt.Color(102, 0, 0));
        txtGeneros.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        txtGeneros.setForeground(new java.awt.Color(255, 255, 255));

        lblEstadoS.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        lblEstadoS.setForeground(new java.awt.Color(255, 255, 255));
        lblEstadoS.setText("ESTADOEJEMPLO");

        cmbEnCartelera.setBackground(new java.awt.Color(102, 0, 0));
        cmbEnCartelera.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        cmbEnCartelera.setForeground(new java.awt.Color(255, 255, 255));
        cmbEnCartelera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SI", "NO" }));
        cmbEnCartelera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEnCarteleraActionPerformed(evt);
            }
        });

        txtEstreno.setBackground(new java.awt.Color(102, 0, 0));
        txtEstreno.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        txtEstreno.setForeground(new java.awt.Color(255, 255, 255));
        txtEstreno.setText("yyyy-MM-dd");
        txtEstreno.setToolTipText("yyyy-MM-dd");

        javax.swing.GroupLayout pnlPeliculaSLayout = new javax.swing.GroupLayout(pnlPeliculaS);
        pnlPeliculaS.setLayout(pnlPeliculaSLayout);
        pnlPeliculaSLayout.setHorizontalGroup(
            pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPeliculaSLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTitulo)
                    .addComponent(lblDirector)
                    .addComponent(lblCartelera)
                    .addComponent(lblEstreno)
                    .addComponent(lblReparto)
                    .addComponent(lblPaisOrigen)
                    .addComponent(lblGeneros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                        .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTitulo)
                            .addComponent(txtDirector)
                            .addComponent(txtPaisOrigen)
                            .addComponent(txtGeneros, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                                .addComponent(cmbEnCartelera, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(90, 90, 90)))
                        .addGap(6, 6, 6))
                    .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                        .addComponent(txtEstreno)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPeliculaSLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lblEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEstadoS)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlPeliculaSLayout.setVerticalGroup(
            pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                        .addComponent(txtTitulo)
                        .addGap(5, 5, 5)))
                .addGap(10, 10, 10)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDirector)
                    .addComponent(txtDirector))
                .addGap(18, 18, 18)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaisOrigen)
                    .addComponent(txtPaisOrigen))
                .addGap(19, 19, 19)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGeneros)
                    .addComponent(txtGeneros))
                .addGap(18, 18, 18)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCartelera)
                    .addComponent(cmbEnCartelera))
                .addGap(17, 17, 17)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEstreno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstreno))
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPeliculaSLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblReparto)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlPeliculaSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblEstado))
                .addGap(51, 51, 51))
        );

        pnlControles.setBackground(new java.awt.Color(102, 0, 0));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/agregar.png"))); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnAlta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/dar-alta.png"))); // NOI18N
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/eliminar.png"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/dar-baja.png"))); // NOI18N
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/modificar.png"))); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControlesLayout = new javax.swing.GroupLayout(pnlControles);
        pnlControles.setLayout(pnlControlesLayout);
        pnlControlesLayout.setHorizontalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar)
                    .addComponent(btnBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlControlesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAgregar, btnAlta, btnBaja, btnEliminar, btnModificar});

        pnlControlesLayout.setVerticalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBaja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlControlesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAgregar, btnAlta, btnBaja, btnEliminar, btnModificar});

        pnlFiltros.setBackground(new java.awt.Color(102, 0, 0));

        lblFiltroEstado.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        lblFiltroEstado.setForeground(new java.awt.Color(255, 255, 255));
        lblFiltroEstado.setText("Estado:");

        lblFiltroCartelera.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        lblFiltroCartelera.setForeground(new java.awt.Color(255, 255, 255));
        lblFiltroCartelera.setText("En Cartelera:");

        btngEstado.add(rbtnEstadoActivo);
        rbtnEstadoActivo.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        rbtnEstadoActivo.setForeground(new java.awt.Color(255, 255, 255));
        rbtnEstadoActivo.setText("Activo");
        rbtnEstadoActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEstadoActivoActionPerformed(evt);
            }
        });

        btngEstado.add(rbtnEstadoInactivo);
        rbtnEstadoInactivo.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        rbtnEstadoInactivo.setForeground(new java.awt.Color(255, 255, 255));
        rbtnEstadoInactivo.setText("Inactivo");
        rbtnEstadoInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEstadoInactivoActionPerformed(evt);
            }
        });

        btngCartelera.add(rbtnCarteleraSi);
        rbtnCarteleraSi.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        rbtnCarteleraSi.setForeground(new java.awt.Color(255, 255, 255));
        rbtnCarteleraSi.setText("Si");
        rbtnCarteleraSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCarteleraSiActionPerformed(evt);
            }
        });

        btngCartelera.add(rbtnCarteleraNo);
        rbtnCarteleraNo.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        rbtnCarteleraNo.setForeground(new java.awt.Color(255, 255, 255));
        rbtnCarteleraNo.setText("No");
        rbtnCarteleraNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCarteleraNoActionPerformed(evt);
            }
        });

        btngEstado.add(rbtnEstadoTodas);
        rbtnEstadoTodas.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        rbtnEstadoTodas.setForeground(new java.awt.Color(255, 255, 255));
        rbtnEstadoTodas.setText("Todas");
        rbtnEstadoTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEstadoTodasActionPerformed(evt);
            }
        });

        btngCartelera.add(rbtnTodasCartelera);
        rbtnTodasCartelera.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        rbtnTodasCartelera.setForeground(new java.awt.Color(255, 255, 255));
        rbtnTodasCartelera.setText("Todas");
        rbtnTodasCartelera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnTodasCarteleraActionPerformed(evt);
            }
        });

        btngVerTodo.add(rbtnVerTodo);
        rbtnVerTodo.setFont(new java.awt.Font("Roboto Black", 0, 13)); // NOI18N
        rbtnVerTodo.setForeground(new java.awt.Color(255, 255, 255));
        rbtnVerTodo.setText("Ver Todo");
        rbtnVerTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnVerTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFiltrosLayout = new javax.swing.GroupLayout(pnlFiltros);
        pnlFiltros.setLayout(pnlFiltrosLayout);
        pnlFiltrosLayout.setHorizontalGroup(
            pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFiltrosLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(rbtnVerTodo)
                .addGap(24, 24, 24)
                .addComponent(lblFiltroEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnEstadoTodas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnEstadoActivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnEstadoInactivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(lblFiltroCartelera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnTodasCartelera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnCarteleraSi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnCarteleraNo)
                .addGap(20, 20, 20))
        );
        pnlFiltrosLayout.setVerticalGroup(
            pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFiltrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltroEstado)
                    .addComponent(lblFiltroCartelera)
                    .addComponent(rbtnEstadoActivo)
                    .addComponent(rbtnEstadoInactivo)
                    .addComponent(rbtnCarteleraSi)
                    .addComponent(rbtnCarteleraNo)
                    .addComponent(rbtnEstadoTodas)
                    .addComponent(rbtnTodasCartelera)
                    .addComponent(rbtnVerTodo))
                .addContainerGap())
        );

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        lblCinemaCentro.setFont(new java.awt.Font("Roboto Black", 1, 36)); // NOI18N
        lblCinemaCentro.setForeground(new java.awt.Color(255, 255, 255));
        lblCinemaCentro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCinemaCentro.setText("CinemaCentro");

        javax.swing.GroupLayout pnlPeliculasLayout = new javax.swing.GroupLayout(pnlPeliculas);
        pnlPeliculas.setLayout(pnlPeliculasLayout);
        pnlPeliculasLayout.setHorizontalGroup(
            pnlPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPeliculasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPeliculaS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlPeliculasLayout.createSequentialGroup()
                        .addComponent(lblTituloPanel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCinemaCentro))
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlFiltros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPeliculasLayout.setVerticalGroup(
            pnlPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPeliculasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTituloPanel)
                    .addComponent(lblCinemaCentro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPeliculasLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalir))
                    .addGroup(pnlPeliculasLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(pnlControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPeliculasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlPeliculaS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
        int fila = tblPeliculas.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una película para dar de alta.");
            return;
        }
        try {
            int id = Integer.parseInt(tblPeliculas.getValueAt(fila, 0).toString());
            peliculaDAO.darAlta(id);
            JOptionPane.showMessageDialog(this, "Película dada de alta.");
            cargarTablaPeliculas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al dar de alta: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAltaActionPerformed

    private void txtDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDirectorActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            String titulo = txtTitulo.getText();
            String director = txtDirector.getText();
            String reparto = txtReparto.getText();
            String pais = txtPaisOrigen.getText();
            String genero = txtGeneros.getText();

            boolean enCartelera = cmbEnCartelera.getSelectedItem().toString().equalsIgnoreCase("Si");

            LocalDate estreno;

            try {
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                estreno = LocalDate.parse(txtEstreno.getText(), formato);
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Formato de fecha invalido. Usá el formato yyyy-MM-dd (por ejemplo: 2025-16-08).");
                return;
            }

            boolean estado = true;

            Pelicula peli = new Pelicula(titulo, director, reparto, pais, genero, enCartelera, estreno, estado);
            peliculaDAO.agregarPelicula(peli);

            JOptionPane.showMessageDialog(this, "Pelicula agregada correctamente.");
            cargarTablaPeliculas();
            limpiarCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al agregar pelicula: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tblPeliculas.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una película para eliminar.");
            return;
        }

        try {
            int id = Integer.parseInt(tblPeliculas.getValueAt(fila, 0).toString());
            peliculaDAO.eliminarPelicula(id);
            JOptionPane.showMessageDialog(this, "Película eliminada correctamente.");
            cargarTablaPeliculas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        int fila = tblPeliculas.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una película para dar de baja.");
            return;
        }
        try {
            int id = Integer.parseInt(tblPeliculas.getValueAt(fila, 0).toString());
            peliculaDAO.darBaja(id);
            JOptionPane.showMessageDialog(this, "Película dada de baja.");
            cargarTablaPeliculas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al dar de baja: " + e.getMessage());
        }
    }//GEN-LAST:event_btnBajaActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int fila = tblPeliculas.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una pelicula para modificar.");
            return;
        }

        try {
            int id = Integer.parseInt(tblPeliculas.getValueAt(fila, 0).toString());
            String titulo = txtTitulo.getText();
            String director = txtDirector.getText();
            String reparto = txtReparto.getText();
            String pais = txtPaisOrigen.getText();
            String genero = txtGeneros.getText();

            boolean enCartelera = cmbEnCartelera.getSelectedItem().toString().equalsIgnoreCase("Si");

            DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate estreno = LocalDate.parse(txtEstreno.getText(), formato);

            boolean estado = lblEstadoS.getText().equalsIgnoreCase("Activo");

            Pelicula peli = new Pelicula(id, titulo, director, reparto, pais, genero, enCartelera, estreno, estado);
            peliculaDAO.modificarPelicula(id, peli);

            JOptionPane.showMessageDialog(this, "Película modificada correctamente.");
            cargarTablaPeliculas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al modificar la pelicula" + e.getMessage());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void cmbEnCarteleraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEnCarteleraActionPerformed

    }//GEN-LAST:event_cmbEnCarteleraActionPerformed

    private void tblPeliculasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPeliculasMouseClicked
        int fila = tblPeliculas.getSelectedRow();
        if (fila != -1) {
            try {
                int id = Integer.parseInt(tblPeliculas.getValueAt(fila, 0).toString());
                Pelicula peli = peliculaDAO.buscarPorId(id);

                if (peli != null) {
                    txtTitulo.setText(peli.getTitulo());
                    txtDirector.setText(peli.getDirector());
                    txtReparto.setText(peli.getReparto());
                    txtPaisOrigen.setText(peli.getPais_Origen());
                    txtGeneros.setText(peli.getGenero());
                    txtEstreno.setText(peli.getEstreno().toString());
                    cmbEnCartelera.setSelectedItem(peli.isEnCartelera() ? "SI" : "NO");
                    lblEstadoS.setText(peli.isEstado() ? "Activo" : "Inactivo");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,
                        "Error al cargar los datos de la película: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_tblPeliculasMouseClicked

    private void rbtnEstadoActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEstadoActivoActionPerformed
        btngVerTodo.clearSelection();
        aplicarFiltros();
    }//GEN-LAST:event_rbtnEstadoActivoActionPerformed

    private void rbtnEstadoTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEstadoTodasActionPerformed
        btngVerTodo.clearSelection();
        aplicarFiltros();
    }//GEN-LAST:event_rbtnEstadoTodasActionPerformed

    private void rbtnEstadoInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEstadoInactivoActionPerformed
        btngVerTodo.clearSelection();
        aplicarFiltros();
    }//GEN-LAST:event_rbtnEstadoInactivoActionPerformed

    private void rbtnTodasCarteleraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnTodasCarteleraActionPerformed
        btngVerTodo.clearSelection();
        aplicarFiltros();
    }//GEN-LAST:event_rbtnTodasCarteleraActionPerformed

    private void rbtnCarteleraSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCarteleraSiActionPerformed
        btngVerTodo.clearSelection();
        aplicarFiltros();
    }//GEN-LAST:event_rbtnCarteleraSiActionPerformed

    private void rbtnCarteleraNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCarteleraNoActionPerformed
        btngVerTodo.clearSelection();
        aplicarFiltros();
    }//GEN-LAST:event_rbtnCarteleraNoActionPerformed

    private void rbtnVerTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnVerTodoActionPerformed
        btngEstado.clearSelection();
        btngCartelera.clearSelection();
        aplicarFiltros();
    }//GEN-LAST:event_rbtnVerTodoActionPerformed

    private void limpiarCampos() {
        txtTitulo.setText("");
        txtDirector.setText("");
        txtReparto.setText("");
        txtPaisOrigen.setText("");
        txtGeneros.setText("");
        txtEstreno.setText("");
        cmbEnCartelera.setSelectedIndex(-1);
    }

    private void cargarTablaPeliculas() {
        try {
            List<Pelicula> peliculas = peliculaDAO.listarTodasPeliculas();
            DefaultTableModel model = VentanaAdministrativo.armarCabeceras(cabeceras);
            for (Pelicula p : peliculas) {
                model.addRow(new Object[]{
                    p.getId_Pelicula(),
                    p.getTitulo(),
                    p.getDirector(),
                    p.isEnCartelera() ? "Sí" : "No",
                    p.getEstreno(),
                    p.isEstado() ? "Activo" : "Inactivo"
                });
            }
            tblPeliculas.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar la tabla: " + e.getMessage());
        }
    }

    private void cargarTabla(List<Pelicula> lista) {
        DefaultTableModel modelo = (DefaultTableModel) tblPeliculas.getModel();
        modelo.setRowCount(0);

        for (Pelicula p : lista) {
            modelo.addRow(new Object[]{
                p.getId_Pelicula(),
                p.getTitulo(),
                p.getDirector(),
                p.isEnCartelera() ? "Sí" : "No",
                p.getEstreno(),
                p.isEstado() ? "Activo" : "Inactivo",
                p.getGenero(),
                p.getPais_Origen(),
            });
        }
    }
    
    private void aplicarFiltros() {
        try {
            List<Pelicula> todas = peliculaDAO.listarTodasPeliculas();
            List<Pelicula> filtradas = new ArrayList<>();

            Boolean filtroEstado = null; // null = todas
            if (rbtnEstadoActivo.isSelected()) filtroEstado = true;
            else if (rbtnEstadoInactivo.isSelected()) filtroEstado = false;

            Boolean filtroCartelera = null; // null = todas
            if (rbtnCarteleraSi.isSelected()) filtroCartelera = true;
            else if (rbtnCarteleraNo.isSelected()) filtroCartelera = false;

            for (Pelicula p : todas) {
                boolean cumple = true;
                
                if (filtroEstado != null && p.isEstado() != filtroEstado) {
                    cumple = false;
                }

                if (filtroCartelera != null && p.isEnCartelera() != filtroCartelera) {
                    cumple = false;
                }

                if (cumple) filtradas.add(p);
            }

            cargarTabla(filtradas);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup btngCartelera;
    private javax.swing.ButtonGroup btngEstado;
    private javax.swing.ButtonGroup btngVerTodo;
    private javax.swing.JComboBox<String> cmbEnCartelera;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCartelera;
    private javax.swing.JLabel lblCinemaCentro;
    private javax.swing.JLabel lblDirector;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblEstadoS;
    private javax.swing.JLabel lblEstreno;
    private javax.swing.JLabel lblFiltroCartelera;
    private javax.swing.JLabel lblFiltroEstado;
    private javax.swing.JLabel lblGeneros;
    private javax.swing.JLabel lblPaisOrigen;
    private javax.swing.JLabel lblReparto;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTituloPanel;
    private javax.swing.JPanel pnlControles;
    private javax.swing.JPanel pnlFiltros;
    private javax.swing.JPanel pnlPeliculaS;
    private javax.swing.JPanel pnlPeliculas;
    private javax.swing.JRadioButton rbtnCarteleraNo;
    private javax.swing.JRadioButton rbtnCarteleraSi;
    private javax.swing.JRadioButton rbtnEstadoActivo;
    private javax.swing.JRadioButton rbtnEstadoInactivo;
    private javax.swing.JRadioButton rbtnEstadoTodas;
    private javax.swing.JRadioButton rbtnTodasCartelera;
    private javax.swing.JRadioButton rbtnVerTodo;
    private javax.swing.JTable tblPeliculas;
    private javax.swing.JTextField txtDirector;
    private javax.swing.JTextField txtEstreno;
    private javax.swing.JTextField txtGeneros;
    private javax.swing.JTextField txtPaisOrigen;
    private javax.swing.JTextArea txtReparto;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
